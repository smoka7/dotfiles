# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
set $alt Mod1
set $shift Shift
set $term alacritty
set $scripts $HOME/.config/scripts

default_border pixel 3
floating_maximum_size 1000 x 800
focus_follows_mouse yes
# for_window [floating] move absolute position center,border pixel 3
for_window [app_id="FootDropDown*"] floating enable,move absolute position center
for_window [floating] border pixel 3
for_window [shell=".*"] title_format "%title :%app_id:%shell"
hide_edge_borders --i3 smart_no_gaps
mouse_warping output
smart_borders on
title_align center
titlebar_border_thickness 0
titlebar_padding 1 1
xwayland enabled
seat seat0 xcursor_theme volantes_cursors 16
# seat seat0 hide_cursor when-typing enable
assign [app_id="firefoxdeveloperedition"] 1
# binsym  --to-code Control+$mod+f [class="firefox"] focus

assign [app_id="VSCodium"] 2
# bindsym --to-code --to-code Control+$mod+d [app_id="VSCodium"] focus

assign [app_id="subl"] 2
assign [app_id="Sublime_merge"] 2
assign [app_id="jetbrains-idea"] 2

assign [app_id="zeal"] 3
assign [app_id="sqlitebrowser"] 3

assign [app_id="cantata"] 4
assign [app_id="transmission-gtk"] 5


workspace_layout tabbed
popup_during_fullscreen smart
### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg ~/Pictures/wallpaper fill
#
# Example configuration:
#
# output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
exec swayidle -w \
         timeout 600 'systemctl hybrid-sleep'\
         before-sleep 'swaylock.sh'
         # timeout 300 'swaylock.sh' \
# timeout 300 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
# exec swayidle -w \
#          timeout 300 'swaylock.sh' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
input "2:8:AlpsPS/2_ALPS_GlidePoint" {
    dwt enabled
    tap enabled
    middle_emulation enabled
    pointer_accel 0.433
}

input * {
    xkb_layout us,ir
    xkb_options grp:alt_shift_toggle
    xkb_numlock enable
}
font pango:Iosevka 8
#class                  border  bground text    indicator child_border
client.urgent           #d81b60 #d81b60 #1b222d #FF5555   #FF5555
client.focused          #fdd835 #fdd835 #1b222d #6272A4   #fdd835
client.unfocused        #fdd856 #f8f8f2 #1b222d #282A36   #282A36
client.background       #F8F8F2
client.placeholder      #282A36 #282A36 #1b222d #282A36   #282A36
client.focused_inactive #aadd33 #aadd33 #1b222d #44475A   #6272A4


# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
# Start a terminal
# bindsym --to-code --to-code $mod+Return exec $term
# start a terminal
bindsym --to-code --to-code $mod+e exec thunar
bindsym --to-code --to-code $mod+r exec tilix
bindsym --to-code $mod+Return exec alacritty
# kill focused window
bindsym --to-code $alt+F4  kill
bindsym --to-code $mod+q  kill
# bindsym --to-code $mod+grave exec $scripts/altf4.sh&>/dev/null show
# bindsym --to-code --release Control+button3 kill
bindsym --to-code $mod+k exec foot --app-id 'launcher'  kill.sh
bindsym --to-code $mod+Semicolon exec foot --app-id 'launcher'  killfzf.sh
bindsym --to-code $mod+i exec foot --app-id 'launcher'  zealfzf.sh
bindsym --to-code $mod+$shift+u exec foot --app-id 'dropp'
bindsym --to-code $mod+u [app_id="dropp"] scratchpad show
bindsym --to-code $mod+$shift+i exec foot --app-id 'launcher'  zealfzf.sh search
bindsym --to-code $mod+y exec swayHelper dropdown
# bindsym $mod+Semicolon exec albert show "kill "
bindsym --to-code  $mod+l exec swaylock.sh
bindsym --to-code  $mod+w exec foot --app-id 'launcher'  nmclisway.sh
bindsym --to-code  $mod+$shift+w exec foot --app-id 'launcher'  nmclisway.sh search
for_window [app_id="^launcher$"] floating enable, border none, resize set width 60 ppt height 60 ppt, move position 20 ppt 20 ppt
# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button+$mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym --to-code $mod+Shift+c reload

# Exit sway (logs you out of your Wayland session)
bindsym --to-code $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
# Or use $mod+[up|down|left|right]
bindsym --to-code $mod+Left exec swayHelper focus prev
bindsym --to-code $mod+Down exec swayHelper focus prev
bindsym --to-code $mod+Up exec swayHelper focus next
bindsym --to-code $mod+Right exec swayHelper focus next

bindsym --to-code $mod+F1 exec swayHelper snap left
bindsym --to-code $mod+F2 exec swayHelper snap top
bindsym --to-code $mod+F3 exec swayHelper snap bottom
bindsym --to-code $mod+F4 exec swayHelper snap right

# Ditto, with arrow keys
bindsym --to-code $mod+Shift+Left move left
bindsym --to-code $mod+Shift+Down move down
bindsym --to-code $mod+Shift+Up move up
bindsym --to-code $mod+Shift+Right move right
#
# Workspaces:
#
bindsym --to-code $mod+n move workspace to output left
bindsym --to-code $mod+m move workspace to output right

bindsym --to-code $mod+Comma move to output left
bindsym --to-code $mod+Period move to output right

bindsym --to-code $mod+Tab workspace back_and_forth
bindsym --to-code $alt+Tab exec swayr switch-window
#
# Switch to workspace
bindsym --to-code $mod+1 workspace number 1
bindsym --to-code $mod+2 workspace number 2
bindsym --to-code $mod+3 workspace number 3
bindsym --to-code $mod+4 workspace number 4
bindsym --to-code $mod+5 workspace number 5
bindsym --to-code $mod+6 workspace number 6
bindsym --to-code $mod+7 workspace number 7
bindsym --to-code $mod+8 workspace number 8
bindsym --to-code $mod+9 workspace number 9
bindsym --to-code $mod+0 workspace number 10
#
# Move focused container to workspace
bindsym --to-code $mod+Shift+1 move container to workspace number 1
bindsym --to-code $mod+Shift+2 move container to workspace number 2
bindsym --to-code $mod+Shift+3 move container to workspace number 3
bindsym --to-code $mod+Shift+4 move container to workspace number 4
bindsym --to-code $mod+Shift+5 move container to workspace number 5
bindsym --to-code $mod+Shift+6 move container to workspace number 6
bindsym --to-code $mod+Shift+7 move container to workspace number 7
bindsym --to-code $mod+Shift+8 move container to workspace number 8
bindsym --to-code $mod+Shift+9 move container to workspace number 9
bindsym --to-code $mod+Shift+0 move container to workspace number 10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.
#marking
# bindsym $mod+i exec i3-input -F 'sark %s' -l 1 -P 'Mark: '
# bindsym $mod+u exec i3-input -F '[con_mark="%s"] focus' -l 1 -P 'Goto: '
# bindsym $mod+Shift+m unmark
# bindsym $mod+bracketleft mark --toggle A
# bindsym $mod+o swap container with mark A
#
# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
#
bindsym --to-code $mod+f fullscreen
bindsym --to-code $mod+$shift+f fullscreen global
bindsym --to-code $mod+g sticky toggle
bindsym --to-code $mod+s floating toggle
bindsym --to-code --whole-window $mod+button3 floating toggle

bindsym --to-code $mod+h move scratchpad
bindsym --to-code $mod+$shift+h scratchpad show

bindsym --to-code $mod+v split toggle
bindsym --to-code $mod+c layout tabbed
bindsym --to-code $mod+b exec swayr execute-swayr-command
# bindsym --to-code $mod+b exec foot --app-id 'launcher'  switch-sway.sh
bindsym --to-code $mod+a focus parent
bindsym --to-code $mod+space focus mode_toggle
#
# Resizing containers:
#
# bindsym --to-code $mod+r mode "resize"
# mode "resize" {
#     bindsym --to-code Left resize shrink width 10px
#     bindsym --to-code Down resize grow height 10px
#     bindsym --to-code Up resize shrink height 10px
#     bindsym --to-code Right resize grow width 10px

#     # Return to default mode
#     bindsym --to-code Return mode "default"
#     bindsym --to-code Escape mode "default"
# }

bindsym --to-code $mod+$alt+Up resize shrink height 10 px or 10 ppt
bindsym --to-code $mod+$alt+Down resize grow height 10 px or 10 ppt
bindsym --to-code $mod+$alt+Right resize grow width 10 px or 10 ppt
bindsym --to-code $mod+$alt+Left resize shrink width 10 px or 10 ppt

bindsym --to-code $mod+KP_5 exec cantata
# bindsym --to-code $mod+d exec albert show
bindsym --to-code $mod+d exec appsmenu.sh
bindsym --to-code $mod+t exec gnome-system-monitor
# bindsym --to-code Control+KP_Enter exec albert show "cq "
bindsym --to-code Control+KP_Enter exec copyq toggle
#
# notification
bindsym --to-code $mod+grave exec dunstctl history-pop
bindsym --to-code Control+Shift+space exec dunstctl context
bindsym --to-code Control+space exec dunstctl close-all

# Multimedia controls
bindsym --to-code Control+KP_0 exec  mpc -h 0.0.0.0 -p 6601 toggle
bindsym --to-code Control+KP_1 exec  mpc -h 0.0.0.0 -p 6601 prev
bindsym --to-code Control+KP_3 exec  mpc  -h 0.0.0.0 -p 6601 next
bindsym --to-code Control+KP_2 exec  $scripts/likeCurrentSong.sh &>/dev/null

# Pulse Audio controls
bindsym --to-code XF86AudioMute exec pactl set-sink-mute 0 toggle
bindsym --to-code XF86AudioRaiseVolume exec $scripts/volume.sh up 5
bindsym --to-code Control+KP_6 exec $scripts/volume.sh up 5
bindsym --to-code XF86AudioLowerVolume exec $scripts/volume.sh down 5
bindsym --to-code Control+KP_4 exec $scripts/volume.sh down 5
# Sreen brightness controls
bindsym --to-code XF86MonBrightnessUp exec $scripts/brightnessctl.sh up
bindsym --to-code XF86MonBrightnessDown exec  $scripts/brightnessctl.sh down
bindsym --to-code $shift+XF86MonBrightnessUp exec brightnessctl -d acpi_video1 s 100
bindsym --to-code $shift+XF86MonBrightnessDown exec brightnessctl -d acpi_video1 s 0

for_window [app_id="copyq"] floating enable
# for_window [class="kitty"] floating enable
for_window [app_id="telegram"] floating enable
# for_window [app_id="Alacritty"] floating enable
for_window [app_id="pavucontrol"] floating enable
# for_window [app_id="Dconf-editor"] floating enable
for_window [app_id="Blueman-manager"] floating enable
for_window [app_id="nm-connection-editor"] floating enable
for_window [app_id="gnome-system-monitor"] floating enable,resize set 700px 600px
for_window [title="About Mozilla Firefox Developer Edition"] floating enable
for_window [app_id="albert"] floating enable , border pixel 0
for_window [app_id="feh"] floating enable , resize set 800px 600px
for_window [app_id="Cisco AnyConnect Secure Mobile Client"] floating enable
for_window [app_id="Nautilus"] floating enable , resize set width 60 ppt height 80 ppt
for_window [app_id="Devtools" window_type="normal"] floating enable, resize set 1336px 345px


exec env RUST_BACKTRACE=1 swayrd > /tmp/swayrd.log 2>&1
bar {
    swaybar_command waybar
}
exec ~/.config/scripts/startup-sway.sh
include ./floating.conf
include /etc/sway/config.d/*
